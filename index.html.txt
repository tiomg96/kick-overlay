<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kick Streamlabs Overlay</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
            font-family: 'Arial', sans-serif;
            background: transparent;
            width: 1920px;
            height: 1080px;
            position: relative;
        }

        /* Webcam Frame */
        .webcam-frame {
            position: absolute;
            bottom: 50px;
            left: 50px;
            width: 320px;
            height: 240px;
            border: 3px solid #00FF85; /* Kick green color */
            border-radius: 10px;
            background: rgba(0, 0, 0, 0.5);
            overflow: hidden;
        }

        .webcam-frame img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* Chat Box (Streamlabs Widget) */
        .chat-box {
            position: absolute;
            bottom: 50px;
            right: 50px;
            width: 300px;
            height: 400px;
            background: rgba(0, 0, 0, 0.7);
            border: 2px solid #00FF85;
            border-radius: 10px;
            overflow: hidden;
        }

        /* Labels for Last Follower and Donation */
        .labels {
            position: absolute;
            top: 50px;
            left: 50px;
            width: 320px;
            background: rgba(0, 0, 0, 0.7);
            border: 2px solid #00FF85;
            border-radius: 10px;
            padding: 10px;
            color: #ffffff;
            font-size: 16px;
        }

        .label-title {
            color: #00FF85;
            font-weight: bold;
        }

        /* Animation for alerts */
        .alert {
            position: absolute;
            top: 150px;
            left: 50%;
            transform: translateX(-50%);
            background: #00FF85;
            color: #000000;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 18px;
            font-weight: bold;
            opacity: 0;
            transition: opacity 0.5s ease-in-out;
        }

        .alert.show {
            opacity: 1;
        }
    </style>
</head>
<body>
    <!-- Webcam Frame -->
    <div class="webcam-frame">
        <!-- Replace with your webcam source in Streamlabs -->
        <img src="https://via.placeholder.com/320x240" alt="Webcam Placeholder">
    </div>

    <!-- Chat Box (Streamlabs Widget Placeholder) -->
    <div class="chat-box" id="chat-box">
        <!-- Streamlabs Chat Widget will be loaded here -->
    </div>

    <!-- Labels for Last Follower and Donation -->
    <div class="labels">
        <p><span class="label-title">Último Seguidor:</span> <span id="last-follower">Ninguno</span></p>
        <p><span class="label-title">Última Donación:</span> <span id="last-donation">Ninguna</span></p>
    </div>

    <!-- Alert for new events -->
    <div class="alert" id="alert">¡Nuevo evento!</div>

    <script>
        // Connect to Streamlabs WebSocket for real-time events
        // Replace 'YOUR_STREAMLABS_TOKEN' with your Streamlabs socket token
        const socket = new WebSocket('wss://sockets.streamlabs.com?token=YOUR_STREAMLABS_TOKEN');

        socket.onopen = function () {
            console.log('Connected to Streamlabs WebSocket');
        };

        socket.onmessage = function (event) {
            const data = JSON.parse(event.data);
            if (data.event === 'follow') {
                const followerName = data.message[0].name;
                updateFollower(followerName);
            } else if (data.event === 'donation') {
                const donorName = data.message[0].name;
                const amount = data.message[0].amount;
                updateDonation(donorName, amount);
            }
        };

        socket.onerror = function (error) {
            console.error('WebSocket Error:', error);
        };

        // Show alert animation
        function showAlert(message) {
            const alert = document.getElementById('alert');
            alert.textContent = message;
            alert.classList.add('show');
            setTimeout(() => {
                alert.classList.remove('show');
            }, 3000); // Hide after 3 seconds
        }

        // Update follower
        function updateFollower(followerName) {
            document.getElementById('last-follower').textContent = followerName;
            showAlert(`¡Nuevo seguidor: ${followerName}!`);
        }

        // Update donation
        function updateDonation(donorName, amount) {
            document.getElementById('last-donation').textContent = `${donorName} - $${amount}`;
            showAlert(`¡Nueva donación de ${donorName}: $${amount}!`);
        }

        // Demo: Simulate events for testing
        setTimeout(() => updateFollower('Gamer123'), 2000);
        setTimeout(() => updateDonation('FanDeKick', '10'), 5000);
    </script>
</body>
</html>